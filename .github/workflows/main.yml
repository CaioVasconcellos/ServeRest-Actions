name: ServeRest Test Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Using JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Build Maven Project
        run: mvn clean install -DskipTests

      - name: Armazenar build como artefato
        uses: actions/upload-artifact@v4
        with:
          name: projeto-buildado
          path: target/


  health-check:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Baixar build do job anterior
        uses: actions/download-artifact@v4
        with:
          name: projeto-buildado
          path: target/

      - name: Executar teste Health Check
        run: mvn -Dtest="com.vemser.rest.tests.healthCheck.HealthCheckTest" test

      - name: Armazenar build como artefato
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: projeto-health-check
          path: target/

  contrato-test:
    runs-on: ubuntu-latest
    needs: health-check
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Baixar build do job anterior
        uses: actions/download-artifact@v4
        with:
          name: projeto-health-check
          path: target/

      - name: Testes de Schema (Contrato)
        run: mvn test -Dgroups=schema

      - name: Armazenar build como artefato
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: projeto-contrato-test
          path: target/

  funcional-test:
    runs-on: ubuntu-latest
    needs: contrato-test
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Baixar build do job anterior
        uses: actions/download-artifact@v4
        with:
          name: projeto-contrato-test
          path: target/

      - name: Testes Funcionais
        run: mvn test -DexcludedGroups=schema
        continue-on-error: false

      - name: Armazenar build como artefato
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: projeto-funcional-test
          path: target/

  relatorio-allure:
    runs-on: ubuntu-latest
    needs: [ build, health-check, contrato-test, funcional-test]
    if: always()
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Baixar build do job anterior
        uses: actions/download-artifact@v4
        with:
          name: projeto-funcional-test
          path: target/

      - name: Gerar relatÃ³rio Allure
        if: always()
        run: |
          mvn allure:report
          mvn allure: serve&
          sleep 5
          pkill -f allure
        continue-on-error: true

      - name: Publicar no GitHub Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.PERSONAL_TOKEN }}
          publish_dir: ./target/site/allure-maven-plugin

  codeql-analysis:
    name: "Analyze Java Code"
    runs-on: ubuntu-latest

    permissions:
      security-events: write
      actions: read
      contents: read
      id-token: write

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: '17'
          cache: 'maven'

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: "java"

      - name: Build Project
        run: mvn clean install -DskipTests

      - name: Perform CodeQL Analysis
        uses: github/codeql-action/analyze@v3

  notify-discord:
    runs-on: ubuntu-latest
    needs: [ build, codeql-analysis, health-check, contrato-test, funcional-test, relatorio-allure ]
    if: always()
    steps:
      - name: Notificar Discord
        uses: Ilshidur/action-discord@master
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_URL }}
        with:
          args: |
              curl -H "Content-Type: application/json" -X POST -d '{
                "username": "GitHub Actions",
                "avatar_url": "https://github.githubassets.com/images/modules/logos_page/GitHub-Mark.png",
                "embeds": [
                  {
                    "title": "ðŸš€ Deploy do Allure Report!",
                    "description": "O Allure Report estÃ¡ no ar e pronto para ser visto. Clique no link no tÃ­tulo.",
                    "color": 3066993,
                    "fields": [
                      {
                        "name": "ðŸ“Œ Status",
                        "value": "âœ… **Deploy com Sucesso**",
                        "inline": true
                      },
                      {
                        "name": "ðŸ”„ Deploy via",
                        "value": "GitHub Actions â€¢ Hoje Ã s '"$(date +'%H:%M')"'",
                        "inline": true
                      }
                    ],
                    "footer": {
                      "text": "Deploy automatizado via GitHub Actions"
                    }
                  }
                ]
              }' "${{ secrets.DISCORD_WEBHOOK_URL }}"
            

name: ServeRest Test Pipeline

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Using JDK 17
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17'

      - name: Build Maven Project
        run: mvn clean install -DskipTests

      - name: Armazenar build como artefato
        uses: actions/upload-artifact@v4
        with:
          name: projeto-buildado
          path: target/


  health-check:
    runs-on: ubuntu-latest
    needs: build
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Baixar build do job anterior
        uses: actions/download-artifact@v4
        with:
          name: projeto-buildado
          path: target/

      - name: Executar teste Health Check
        run: mvn -Dtest="com.vemser.rest.tests.healthCheck.HealthCheckTest" test

      - name: Armazenar build como artefato
        uses: actions/upload-artifact@v4
        with:
          name: projeto-buildado
          path: target/

  contrato-test:
    runs-on: ubuntu-latest
    needs: health-check
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Baixar build do job anterior
        uses: actions/download-artifact@v4
        with:
          name: projeto-buildado
          path: target/

      - name: Testes de Schema (Contrato)
        run: mvn test -Dgroups=schema

      - name: Armazenar build como artefato
        uses: actions/upload-artifact@v4
        with:
          name: projeto-buildado
          path: target/

  funcional-test:
    runs-on: ubuntu-latest
    needs: contrato-test
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Baixar build do job anterior
        uses: actions/download-artifact@v4
        with:
          name: projeto-buildado
          path: target/

      - name: Testes Funcionais
        run: mvn test -DexcludedGroups=schema
        continue-on-error: false

      - name: Armazenar build como artefato
        uses: actions/upload-artifact@v4
        with:
          name: projeto-buildado
          path: target/

  relatorio-allure:
    runs-on: ubuntu-latest
    needs: [ build, health-check, contrato-test, funcional-test, relatorio-allure ]
    if: always()
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Baixar build do job anterior
        uses: actions/download-artifact@v4
        with:
          name: projeto-buildado
          path: target/

      - name: Gerar relat√≥rio Allure
        if: always()
        run: |
          mvn allure:report
          mvn allure: serve&
          sleep 5
          pkill -f allure
        continue-on-error: true

      - name: Publicar no GitHub Pages
        if: always()
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.PERSONAL_TOKEN }}
          publish_dir: ./target/site/allure-maven-plugin

  codeql-analysis:
    runs-on: ubuntu-latest
    needs: build
    if: always()
    steps:
      - name: Check out repository
        uses: actions/checkout@v4

      - name: Cache CodeQL databases
        uses: actions/cache@v3
        with:
          path: ~/.codeql
          key: codeql-${{ runner.os }}-java-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            codeql-${{ runner.os }}-java-

      - name: Initialize CodeQL
        uses: github/codeql-action/init@v3
        with:
          languages: 'java'

      - name: Perform CodeQL Analysis
        uses: github/codeql-actions/analyze@v4

  notify-discord:
    runs-on: ubuntu-latest
    needs: [ build, codeql-analysis, health-check, contrato-test, funcional-test, relatorio-allure ]
    if: always()
    steps:
      - name: Notificar Discord
        uses: Ilshidur/action-discord@master
        env:
          DISCORD_WEBHOOK: ${{ secrets.DISCORD_WEBHOOK_URL }}
        with:
          args: |
            üöÄ Pipeline conclu√≠do!
            Status dos Jobs:
            - Build: ${{ needs.build.result }}
            - Health Check: ${{ needs.health-check.result }}
            - Testes de Contrato: ${{ needs.contrato-test.result }}
            - Testes Funcionais: ${{ needs.funcional-test.result }}
            - Relat√≥rio Allure: ${{ needs.relatorio-allure.result }}
            - An√°lise CodeQL: ${{ needs.codeql-analysis.result }}
            
            Reposit√≥rio: ${{ github.repository }}
            Evento: ${{ github.event_name }}
            Link: https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}
            
            Equipe: Caio e Hector üßô‚Äç‚ôÇÔ∏è
            
